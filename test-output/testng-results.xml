<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="13" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-23T01:10:26 IST" name="Suite" finished-at="2024-07-23T01:10:26 IST" duration-ms="158">
    <groups>
      <group name="Smoke">
        <method signature="day1.SecondTest()[pri:0, instance:Test.day1@be64738]" name="SecondTest" class="Test.day1"/>
        <method signature="day3.WebloginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.day3@5e0826e7]" name="WebloginCarLoan" class="Test.day3"/>
        <method signature="day4.WebloginHomeLoan(java.lang.String)[pri:0, instance:Test.day4@6b927fb]" name="WebloginHomeLoan" class="Test.day4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-07-23T01:10:26 IST" name="Personal loan" finished-at="2024-07-23T01:10:26 IST" duration-ms="55">
      <class name="Test.day1">
        <test-method signature="Demo(java.lang.String)[pri:0, instance:Test.day1@be64738]" started-at="2024-07-23T01:10:26 IST" name="Demo" finished-at="2024-07-23T01:10:26 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method signature="SecondTest()[pri:0, instance:Test.day1@be64738]" started-at="2024-07-23T01:10:26 IST" name="SecondTest" finished-at="2024-07-23T01:10:26 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
      </class> <!-- Test.day1 -->
      <class name="Test.day2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:Test.day2@50a638b5]" started-at="2024-07-23T01:10:26 IST" name="prerequiste" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="ploan(java.lang.String)[pri:0, instance:Test.day2@50a638b5]" started-at="2024-07-23T01:10:26 IST" name="ploan" finished-at="2024-07-23T01:10:26 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
        <test-method is-config="true" signature="postrequiste()[pri:0, instance:Test.day2@50a638b5]" started-at="2024-07-23T01:10:26 IST" name="postrequiste" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postrequiste -->
      </class> <!-- Test.day2 -->
    </test> <!-- Personal loan -->
    <test started-at="2024-07-23T01:10:26 IST" name="Car Loan" finished-at="2024-07-23T01:10:26 IST" duration-ms="62">
      <class name="Test.day3">
        <test-method is-config="true" signature="bfclass()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="bfclass" finished-at="2024-07-23T01:10:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfclass -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="beforeevery" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="APICarLoan()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="APICarLoan" finished-at="2024-07-23T01:10:26 IST" duration-ms="12" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Test.day3.APICarLoan(day3.java:62)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APICarLoan -->
        <test-method is-config="true" signature="aftereevery()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="aftereevery" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereevery -->
        <test-method signature="MobileSigninCarLoan(java.lang.String)[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="MobileSigninCarLoan" finished-at="2024-07-23T01:10:26 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Carloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSigninCarLoan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="beforeevery" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilelogoutCarLoan()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="MobilelogoutCarLoan" finished-at="2024-07-23T01:10:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilelogoutCarLoan -->
        <test-method is-config="true" signature="aftereevery()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="aftereevery" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="beforeevery" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="aftereevery()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="aftereevery" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereevery -->
        <test-method signature="WebloginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="WebloginCarLoan" finished-at="2024-07-23T01:10:26 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PRAcademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="beforeevery" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="aftereevery()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="aftereevery" finished-at="2024-07-23T01:10:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereevery -->
        <test-method is-config="true" signature="afclass()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:26 IST" name="afclass" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afclass -->
      </class> <!-- Test.day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2024-07-23T01:10:26 IST" name="Home loan" finished-at="2024-07-23T01:10:26 IST" duration-ms="20">
      <class name="Test.day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:Test.day3@5e0826e7]" started-at="2024-07-23T01:10:25 IST" name="Bfsuite" finished-at="2024-07-23T01:10:25 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
      </class> <!-- Test.day3 -->
      <class name="Test.day4">
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:Test.day4@6b927fb]" started-at="2024-07-23T01:10:26 IST" name="LoginAPIHomeLoan" finished-at="2024-07-23T01:10:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileloginHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.day4@6b927fb]" started-at="2024-07-23T01:10:26 IST" name="MobileloginHomeLoan" data-provider="getData" finished-at="2024-07-23T01:10:26 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomeLoan -->
        <test-method signature="MobileloginHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.day4@6b927fb]" started-at="2024-07-23T01:10:26 IST" name="MobileloginHomeLoan" data-provider="getData" finished-at="2024-07-23T01:10:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomeLoan -->
        <test-method signature="MobileloginHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:Test.day4@6b927fb]" started-at="2024-07-23T01:10:26 IST" name="MobileloginHomeLoan" data-provider="getData" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomeLoan -->
        <test-method signature="WebloginHomeLoan(java.lang.String)[pri:0, instance:Test.day4@6b927fb]" started-at="2024-07-23T01:10:26 IST" name="WebloginHomeLoan" finished-at="2024-07-23T01:10:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[homeloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
        <test-method is-config="true" signature="Afsuite()[pri:0, instance:Test.day4@6b927fb]" started-at="2024-07-23T01:10:26 IST" name="Afsuite" finished-at="2024-07-23T01:10:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afsuite -->
      </class> <!-- Test.day4 -->
    </test> <!-- Home loan -->
  </suite> <!-- Suite -->
</testng-results>
